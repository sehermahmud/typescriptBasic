{"id":"node_modules/@google/maps/lib/index.js","dependencies":[{"name":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/package.json","includedInParent":true,"mtime":1600253454264},{"name":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/package.json","includedInParent":true,"mtime":1600253219062},{"name":"./internal/make-api-call","loc":{"line":54,"column":28},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/index.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/internal/make-api-call.js"},{"name":"util","loc":{"line":55,"column":26},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/index.js","resolved":"/Users/sehermahmud/npm-global/lib/node_modules/parcel-bundler/node_modules/util/util.js"},{"name":"./apis/geocode","loc":{"line":79,"column":24},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/index.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/apis/geocode.js"},{"name":"./apis/geolocation","loc":{"line":80,"column":28},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/index.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/apis/geolocation.js"},{"name":"./apis/timezone","loc":{"line":81,"column":25},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/index.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/apis/timezone.js"},{"name":"./apis/directions","loc":{"line":82,"column":27},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/index.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/apis/directions.js"},{"name":"./apis/distance-matrix","loc":{"line":83,"column":31},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/index.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/apis/distance-matrix.js"},{"name":"./apis/elevation","loc":{"line":84,"column":26},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/index.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/apis/elevation.js"},{"name":"./apis/roads","loc":{"line":85,"column":22},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/index.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/apis/roads.js"},{"name":"./apis/places","loc":{"line":86,"column":23},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/index.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/apis/places.js"},{"name":"./internal/cli","loc":{"line":121,"column":22},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/index.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/internal/cli.js"},{"name":"./util","loc":{"line":122,"column":23},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/index.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/util.js"}],"generated":{"js":"/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Google Maps Service module.\n * @module @google/maps\n */\n\n/**\n * Creates a Google Maps client. The client object contains all the API methods.\n *\n * @param {Object} options\n * @param {string} options.key API key (required, unless clientID and\n *     clientSecret provided).\n * @param {string=} options.clientId Maps API for Work client ID.\n * @param {string=} options.clientSecret Maps API for Work client secret (a.k.a.\n *     private key).\n * @param {string=} options.channel Maps API for Work channel.\n * @param {number=} options.timeout Timeout in milliseconds.\n *     (Default: 60 * 1000 ms)\n * @param {string=} options.language Default language for all queries.\n        See https://developers.google.com/maps/faq#languagesupport\n * @param {number=} options.rate.limit Controls rate-limiting of requests.\n *     Maximum number of requests per period. (Default: 50)\n * @param {number=} options.rate.period Period for rate limit, in milliseconds.\n *     (Default: 1000 ms)\n * @param {number=} options.retryOptions.interval If a transient server error\n *     occurs, how long to wait before retrying the request, in milliseconds.\n *     (Default: 500 ms)\n * @param {Function=} options.Promise - Promise constructor (optional).\n * @return {GoogleMapsClient} The client object containing all API methods.\n */\nexports.createClient = function(options) {\n  options = options || {};\n\n  if (options.experienceId && typeof options.experienceId === \"string\") {\n    options.experienceId = [options.experienceId];\n  }\n\n  var makeApiCall = require(\"./internal/make-api-call\").inject(options);\n  var deprecate = require(\"util\").deprecate;\n\n  var makeApiMethod = function(apiConfig) {\n    return function(query, callback, customParams) {\n      query = apiConfig.validator(query);\n      query.supportsClientId = apiConfig.supportsClientId !== false;\n      query.options = apiConfig.options;\n      if (options.language && !query.language) {\n        query.language = options.language;\n      }\n      // Merge query and customParams.\n      var finalQuery = {};\n      customParams = customParams || {};\n      [query, customParams].map(function(obj) {\n        Object.keys(obj)\n          .sort()\n          .map(function(key) {\n            finalQuery[key] = obj[key];\n          });\n      });\n      return makeApiCall(apiConfig.url, finalQuery, callback);\n    };\n  };\n\n  var geocode = require(\"./apis/geocode\");\n  var geolocation = require(\"./apis/geolocation\");\n  var timezone = require(\"./apis/timezone\");\n  var directions = require(\"./apis/directions\");\n  var distanceMatrix = require(\"./apis/distance-matrix\");\n  var elevation = require(\"./apis/elevation\");\n  var roads = require(\"./apis/roads\");\n  var places = require(\"./apis/places\");\n\n  return {\n    directions: makeApiMethod(directions.directions),\n    distanceMatrix: makeApiMethod(distanceMatrix.distanceMatrix),\n    elevation: makeApiMethod(elevation.elevation),\n    elevationAlongPath: makeApiMethod(elevation.elevationAlongPath),\n    geocode: makeApiMethod(geocode.geocode),\n    geolocate: makeApiMethod(geolocation.geolocate),\n    reverseGeocode: makeApiMethod(geocode.reverseGeocode),\n    findPlace: makeApiMethod(places.findPlace),\n    places: makeApiMethod(places.places),\n    placesNearby: makeApiMethod(places.placesNearby),\n    place: makeApiMethod(places.place),\n    placesPhoto: makeApiMethod(places.placesPhoto),\n    placesAutoComplete: makeApiMethod(places.placesAutoComplete),\n    placesQueryAutoComplete: makeApiMethod(places.placesQueryAutoComplete),\n    snapToRoads: makeApiMethod(roads.snapToRoads),\n    nearestRoads: makeApiMethod(roads.nearestRoads),\n    speedLimits: makeApiMethod(roads.speedLimits),\n    snappedSpeedLimits: makeApiMethod(roads.snappedSpeedLimits),\n    timezone: makeApiMethod(timezone.timezone),\n    setExperienceId: (...ids) => {\n      if (typeof ids === \"string\") {\n        ids = [ids];\n      }\n      options.experienceId = ids;\n    },\n    getExperienceId: _ => options.experienceId,\n    clearExperienceId: _ => {\n      options.experienceId = null;\n    }\n  };\n};\n\nexports.cli = require(\"./internal/cli\");\nexports.util = require(\"./util\");\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@google/maps/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@google/maps/lib/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}}],"sources":{"node_modules/@google/maps/lib/index.js":"/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Google Maps Service module.\n * @module @google/maps\n */\n\n/**\n * Creates a Google Maps client. The client object contains all the API methods.\n *\n * @param {Object} options\n * @param {string} options.key API key (required, unless clientID and\n *     clientSecret provided).\n * @param {string=} options.clientId Maps API for Work client ID.\n * @param {string=} options.clientSecret Maps API for Work client secret (a.k.a.\n *     private key).\n * @param {string=} options.channel Maps API for Work channel.\n * @param {number=} options.timeout Timeout in milliseconds.\n *     (Default: 60 * 1000 ms)\n * @param {string=} options.language Default language for all queries.\n        See https://developers.google.com/maps/faq#languagesupport\n * @param {number=} options.rate.limit Controls rate-limiting of requests.\n *     Maximum number of requests per period. (Default: 50)\n * @param {number=} options.rate.period Period for rate limit, in milliseconds.\n *     (Default: 1000 ms)\n * @param {number=} options.retryOptions.interval If a transient server error\n *     occurs, how long to wait before retrying the request, in milliseconds.\n *     (Default: 500 ms)\n * @param {Function=} options.Promise - Promise constructor (optional).\n * @return {GoogleMapsClient} The client object containing all API methods.\n */\nexports.createClient = function(options) {\n  options = options || {};\n\n  if (options.experienceId && typeof options.experienceId === \"string\") {\n    options.experienceId = [options.experienceId];\n  }\n\n  var makeApiCall = require(\"./internal/make-api-call\").inject(options);\n  var deprecate = require(\"util\").deprecate;\n\n  var makeApiMethod = function(apiConfig) {\n    return function(query, callback, customParams) {\n      query = apiConfig.validator(query);\n      query.supportsClientId = apiConfig.supportsClientId !== false;\n      query.options = apiConfig.options;\n      if (options.language && !query.language) {\n        query.language = options.language;\n      }\n      // Merge query and customParams.\n      var finalQuery = {};\n      customParams = customParams || {};\n      [query, customParams].map(function(obj) {\n        Object.keys(obj)\n          .sort()\n          .map(function(key) {\n            finalQuery[key] = obj[key];\n          });\n      });\n      return makeApiCall(apiConfig.url, finalQuery, callback);\n    };\n  };\n\n  var geocode = require(\"./apis/geocode\");\n  var geolocation = require(\"./apis/geolocation\");\n  var timezone = require(\"./apis/timezone\");\n  var directions = require(\"./apis/directions\");\n  var distanceMatrix = require(\"./apis/distance-matrix\");\n  var elevation = require(\"./apis/elevation\");\n  var roads = require(\"./apis/roads\");\n  var places = require(\"./apis/places\");\n\n  return {\n    directions: makeApiMethod(directions.directions),\n    distanceMatrix: makeApiMethod(distanceMatrix.distanceMatrix),\n    elevation: makeApiMethod(elevation.elevation),\n    elevationAlongPath: makeApiMethod(elevation.elevationAlongPath),\n    geocode: makeApiMethod(geocode.geocode),\n    geolocate: makeApiMethod(geolocation.geolocate),\n    reverseGeocode: makeApiMethod(geocode.reverseGeocode),\n    findPlace: makeApiMethod(places.findPlace),\n    places: makeApiMethod(places.places),\n    placesNearby: makeApiMethod(places.placesNearby),\n    place: makeApiMethod(places.place),\n    placesPhoto: makeApiMethod(places.placesPhoto),\n    placesAutoComplete: makeApiMethod(places.placesAutoComplete),\n    placesQueryAutoComplete: makeApiMethod(places.placesQueryAutoComplete),\n    snapToRoads: makeApiMethod(roads.snapToRoads),\n    nearestRoads: makeApiMethod(roads.nearestRoads),\n    speedLimits: makeApiMethod(roads.speedLimits),\n    snappedSpeedLimits: makeApiMethod(roads.snappedSpeedLimits),\n    timezone: makeApiMethod(timezone.timezone),\n    setExperienceId: (...ids) => {\n      if (typeof ids === \"string\") {\n        ids = [ids];\n      }\n      options.experienceId = ids;\n    },\n    getExperienceId: _ => options.experienceId,\n    clearExperienceId: _ => {\n      options.experienceId = null;\n    }\n  };\n};\n\nexports.cli = require(\"./internal/cli\");\nexports.util = require(\"./util\");\n"},"lineCount":123}},"error":null,"hash":"698cc236e0624585db40a891965e27c2","cacheData":{"env":{}}}