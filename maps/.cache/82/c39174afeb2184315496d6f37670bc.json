{"id":"node_modules/@google/maps/lib/util.js","dependencies":[{"name":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/package.json","includedInParent":true,"mtime":1600253454264},{"name":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/package.json","includedInParent":true,"mtime":1600253219062},{"name":"uuid","loc":{"line":18,"column":31},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/util.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/uuid/dist/esm-browser/index.js"}],"generated":{"js":"/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */;\n\nconst { v4: uuidv4 } = require('uuid');\n\n/**\n * Polyline encodes an array of LatLng objects.\n *\n * See {@link https://developers.google.com/maps/documentation/utilities/polylinealgorithm}\n *\n * @memberof! module:@google/maps\n * @name module:@google/maps.util.encodePath\n * @function\n * @param {LatLng[]} path\n * @return {string}\n */\nexports.encodePath = function(path) {\n\n  var result = [];\n  var start = [0, 0];\n  var end;\n\n  var encodePart = function(part) {\n    part = part < 0 ? ~(part << 1) : (part << 1);\n    while (part >= 0x20) {\n      result.push(String.fromCharCode((0x20 | (part & 0x1f)) + 63));\n      part >>= 5;\n    }\n    result.push(String.fromCharCode(part + 63));\n  };\n\n  for (var i = 0, I = path.length || 0; i < I; ++i) {\n    end = [Math.round(path[i].lat * 1e5), Math.round(path[i].lng * 1e5)];\n    encodePart(end[0] - start[0]);  // lat\n    encodePart(end[1] - start[1]);  // lng\n    start = end;\n  }\n\n  return result.join('');\n}\n\n/**\n * Decodes a polyline encoded string.\n *\n * See {@link https://developers.google.com/maps/documentation/utilities/polylinealgorithm}\n *\n * @memberof! module:@google/maps\n * @name module:@google/maps.util.decodePath\n * @function\n * @param {string} path\n * @return {LatLng[]}\n */\nexports.decodePath = function(encodedPath) {\n\n  var len = encodedPath.length || 0;\n  var path = new Array(Math.floor(encodedPath.length / 2));\n  var index = 0;\n  var lat = 0;\n  var lng = 0;\n\n  for (var pointIndex = 0; index < len; ++pointIndex) {\n    var result = 1;\n    var shift = 0;\n    var b;\n    do {\n      b = encodedPath.charCodeAt(index++) - 63 - 1;\n      result += b << shift;\n      shift += 5;\n    } while (b >= 0x1f);\n    lat += ((result & 1) ? ~(result >> 1) : (result >> 1));\n\n    result = 1;\n    shift = 0;\n    do {\n      b = encodedPath.charCodeAt(index++) - 63 - 1;\n      result += b << shift;\n      shift += 5;\n    } while (b >= 0x1f);\n    lng += ((result & 1) ? ~(result >> 1) : (result >> 1));\n\n    path[pointIndex] = {lat: lat * 1e-5, lng: lng * 1e-5};\n  }\n  path.length = pointIndex;\n\n  return path;\n};\n\nexports.placesAutoCompleteSessionToken = uuidv4;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@google/maps/lib/util.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@google/maps/lib/util.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}}],"sources":{"node_modules/@google/maps/lib/util.js":"/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */;\n\nconst { v4: uuidv4 } = require('uuid');\n\n/**\n * Polyline encodes an array of LatLng objects.\n *\n * See {@link https://developers.google.com/maps/documentation/utilities/polylinealgorithm}\n *\n * @memberof! module:@google/maps\n * @name module:@google/maps.util.encodePath\n * @function\n * @param {LatLng[]} path\n * @return {string}\n */\nexports.encodePath = function(path) {\n\n  var result = [];\n  var start = [0, 0];\n  var end;\n\n  var encodePart = function(part) {\n    part = part < 0 ? ~(part << 1) : (part << 1);\n    while (part >= 0x20) {\n      result.push(String.fromCharCode((0x20 | (part & 0x1f)) + 63));\n      part >>= 5;\n    }\n    result.push(String.fromCharCode(part + 63));\n  };\n\n  for (var i = 0, I = path.length || 0; i < I; ++i) {\n    end = [Math.round(path[i].lat * 1e5), Math.round(path[i].lng * 1e5)];\n    encodePart(end[0] - start[0]);  // lat\n    encodePart(end[1] - start[1]);  // lng\n    start = end;\n  }\n\n  return result.join('');\n}\n\n/**\n * Decodes a polyline encoded string.\n *\n * See {@link https://developers.google.com/maps/documentation/utilities/polylinealgorithm}\n *\n * @memberof! module:@google/maps\n * @name module:@google/maps.util.decodePath\n * @function\n * @param {string} path\n * @return {LatLng[]}\n */\nexports.decodePath = function(encodedPath) {\n\n  var len = encodedPath.length || 0;\n  var path = new Array(Math.floor(encodedPath.length / 2));\n  var index = 0;\n  var lat = 0;\n  var lng = 0;\n\n  for (var pointIndex = 0; index < len; ++pointIndex) {\n    var result = 1;\n    var shift = 0;\n    var b;\n    do {\n      b = encodedPath.charCodeAt(index++) - 63 - 1;\n      result += b << shift;\n      shift += 5;\n    } while (b >= 0x1f);\n    lat += ((result & 1) ? ~(result >> 1) : (result >> 1));\n\n    result = 1;\n    shift = 0;\n    do {\n      b = encodedPath.charCodeAt(index++) - 63 - 1;\n      result += b << shift;\n      shift += 5;\n    } while (b >= 0x1f);\n    lng += ((result & 1) ? ~(result >> 1) : (result >> 1));\n\n    path[pointIndex] = {lat: lat * 1e-5, lng: lng * 1e-5};\n  }\n  path.length = pointIndex;\n\n  return path;\n};\n\nexports.placesAutoCompleteSessionToken = uuidv4;\n"},"lineCount":103}},"error":null,"hash":"fc71fefbf868bf7fde3f880ab7498cc1","cacheData":{"env":{}}}