{"id":"node_modules/@google/maps/lib/internal/throttled-queue.js","dependencies":[{"name":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/package.json","includedInParent":true,"mtime":1600253454264},{"name":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/package.json","includedInParent":true,"mtime":1600253219062},{"name":"./circular-buffer","loc":{"line":18,"column":29},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/internal/throttled-queue.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/internal/circular-buffer.js"},{"name":"./task","loc":{"line":19,"column":19},"parent":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/internal/throttled-queue.js","resolved":"/Users/sehermahmud/npm-global/udemy/e-Microservices/maps/node_modules/@google/maps/lib/internal/task.js"}],"generated":{"js":"/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar CircularBuffer = require('./circular-buffer');\nvar Task = require('./task');\n\nexports.inject = function(wait, getTime) {\n  return {\n    /**\n     * Creates a ThrottledQueue. The queue stores tasks, which will be executed\n     * asynchronously, at a controlled rate.\n     *\n     * @param {number} limit The maximum number of tasks that can be executed\n     *     over one period.\n     * @param {number} period The time period (ms) over which limit is\n     *     enforceable.\n     * @return {ThrottledQueue}\n     */\n    create: function(limit, period) {\n      var me = {};\n      var queue = Task.withValue();\n      var recentTimes = CircularBuffer.create(limit);\n\n      /**\n       * Adds a task to the work queue.\n       *\n       * @param {function(): Task<T>} doSomething Starts the task. This function\n       *     will be called when the rate limit allows.\n       * @return {Task<T>} The delayed task.\n       * @template T\n       */\n      me.add = function(doSomething) {\n        // Return a separate task from the queue, so that cancelling a task\n        // doesn't propagate back and cancel the whole queue.\n        var waitForMyTurn = Task\n            .start(function(resolve) {\n              queue.finally(resolve);\n            })\n            .thenDo(function() {\n              var lastTime = recentTimes.item(limit - 1);\n              if (lastTime == undefined) return;\n              return wait(Math.max(lastTime + period - getTime(), 0));\n            })\n            .thenDo(function() {\n              recentTimes.insert(getTime());\n            });\n\n        queue = queue.thenDo(function() {\n          return Task.start(function(resolve) {\n            waitForMyTurn.finally(resolve);\n          });\n        });\n\n        return waitForMyTurn.thenDo(doSomething);\n      };\n\n      return me;\n    }\n  };\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@google/maps/lib/internal/throttled-queue.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"node_modules/@google/maps/lib/internal/throttled-queue.js":"/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar CircularBuffer = require('./circular-buffer');\nvar Task = require('./task');\n\nexports.inject = function(wait, getTime) {\n  return {\n    /**\n     * Creates a ThrottledQueue. The queue stores tasks, which will be executed\n     * asynchronously, at a controlled rate.\n     *\n     * @param {number} limit The maximum number of tasks that can be executed\n     *     over one period.\n     * @param {number} period The time period (ms) over which limit is\n     *     enforceable.\n     * @return {ThrottledQueue}\n     */\n    create: function(limit, period) {\n      var me = {};\n      var queue = Task.withValue();\n      var recentTimes = CircularBuffer.create(limit);\n\n      /**\n       * Adds a task to the work queue.\n       *\n       * @param {function(): Task<T>} doSomething Starts the task. This function\n       *     will be called when the rate limit allows.\n       * @return {Task<T>} The delayed task.\n       * @template T\n       */\n      me.add = function(doSomething) {\n        // Return a separate task from the queue, so that cancelling a task\n        // doesn't propagate back and cancel the whole queue.\n        var waitForMyTurn = Task\n            .start(function(resolve) {\n              queue.finally(resolve);\n            })\n            .thenDo(function() {\n              var lastTime = recentTimes.item(limit - 1);\n              if (lastTime == undefined) return;\n              return wait(Math.max(lastTime + period - getTime(), 0));\n            })\n            .thenDo(function() {\n              recentTimes.insert(getTime());\n            });\n\n        queue = queue.thenDo(function() {\n          return Task.start(function(resolve) {\n            waitForMyTurn.finally(resolve);\n          });\n        });\n\n        return waitForMyTurn.thenDo(doSomething);\n      };\n\n      return me;\n    }\n  };\n};\n"},"lineCount":75}},"error":null,"hash":"5bf21db20ebe3b044707a2f0101b29f9","cacheData":{"env":{}}}